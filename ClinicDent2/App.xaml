<Application x:Class="ClinicDent2.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:ClinicDent2.Converters"
             xmlns:local="clr-namespace:ClinicDent2"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converters:BoolToVisibilityConverter x:Key="invertedBoolToVisibilityConverter" IsInverted="True" />
        <converters:GenderToBoolConverter x:Key="genderToBoolConverter" />
        <converters:ShortDateToStringConverter x:Key="shortDateToStringConverter" />
        <converters:BytesToImageSourceConverter x:Key="bytesToImageSourceConverter" />
        <converters:PatientsViewDotsVisibilityConverter x:Key="dotsVisibilityConverter"/>
        <converters:BirthdateToYearsOldConverter x:Key="birthdateToYearsOldConverter" />
        <converters:NumberToStringConverter x:Key="numberToStringConverter" />
        <converters:StageAssetTypeToStringConverter x:Key="stageAssetTypeToStringConverter"/>
        <converters:CollectionCountToVisibilityConverter x:Key="collectionCountToVisibilityConverter"/>
        <Style TargetType="Label">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="Button">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="TextBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="RadioButton">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="DatePicker">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="CheckBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="ListBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style x:Key="sideBarButton" TargetType="Button">
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style x:Key="sideButtonCreatePatient" TargetType="Button">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button" CornerRadius="5" BorderBrush="Transparent" BorderThickness="1" Background="#88bb5f">
                                <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="button" Property="Background"  Value="#7dad57"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="#88bb5f"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="FontSize" Value="18"/>
            </Style.Setters>
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="imageWrapperToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Border x:Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="0" Background="Transparent" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="toggleContent" 
                                 Cursor="{TemplateBinding Cursor}"
                                 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}" 
                                 Margin="{TemplateBinding Margin}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="Border" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="Grid" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CustomCalendarDayButtonTemplate" TargetType="CalendarDayButton">
            <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" Padding="5">
                <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#FFDDDDDD" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#FFCCCCCC" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsInactive" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <!-- You can set this to your preferred background -->
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
